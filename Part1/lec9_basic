-------- 본 쿼리는 데이터 분석을 위한 sql레시피 교재를 활용하여 작성된 것입니다. -----

------ lec9. 시계열 기반으로 데이터 집계하기 ---------

DROP TABLE IF EXISTS inlaid-lane-373607.sqlr202301.lec9_1;
CREATE TABLE inlaid-lane-373607.sqlr202301.lec9_1(
    dt              string(255)
  , order_id        integer
  , user_id         string(255)
  , purchase_amount integer
);

INSERT INTO inlaid-lane-373607.sqlr202301.lec9_1
VALUES
    ('2014-01-01',  1, 'rhwpvvitou', 13900)
  , ('2014-01-01',  2, 'hqnwoamzic', 10616)
  , ('2014-01-02',  3, 'tzlmqryunr', 21156)
  , ('2014-01-02',  4, 'wkmqqwbyai', 14893)
  , ('2014-01-03',  5, 'ciecbedwbq', 13054)
  , ('2014-01-03',  6, 'svgnbqsagx', 24384)
  , ('2014-01-03',  7, 'dfgqftdocu', 15591)
  , ('2014-01-04',  8, 'sbgqlzkvyn',  3025)
  , ('2014-01-04',  9, 'lbedmngbol', 24215)
  , ('2014-01-04', 10, 'itlvssbsgx',  2059)
  , ('2014-01-05', 11, 'jqcmmguhik',  4235)
  , ('2014-01-05', 12, 'jgotcrfeyn', 28013)
  , ('2014-01-05', 13, 'pgeojzoshx', 16008)
  , ('2014-01-06', 14, 'msjberhxnx',  1980)
  , ('2014-01-06', 15, 'tlhbolohte', 23494)
  , ('2014-01-06', 16, 'gbchhkcotf',  3966)
  , ('2014-01-07', 17, 'zfmbpvpzvu', 28159)
  , ('2014-01-07', 18, 'yauwzpaxtx',  8715)
  , ('2014-01-07', 19, 'uyqboqfgex', 10805)
  , ('2014-01-08', 20, 'hiqdkrzcpq',  3462)
  , ('2014-01-08', 21, 'zosbvlylpv', 13999)
  , ('2014-01-08', 22, 'bwfbchzgnl',  2299)
  , ('2014-01-09', 23, 'zzgauelgrt', 16475)
  , ('2014-01-09', 24, 'qrzfcwecge',  6469)
  , ('2014-01-10', 25, 'njbpsrvvcq', 16584)
  , ('2014-01-10', 26, 'cyxfgumkst', 11339)
;

--1) 날짜별 매출 집계하기
select dt, count(*) as purchase_count,
sum(purchase_amount) as total_amount,
avg(purchase_amount) as avg_amount
from inlaid-lane-373607.sqlr202301.lec9_1
group by dt
order by dt;

--2) 이동평균을 사용한 날짜별 추이 보기
DROP TABLE IF EXISTS inlaid-lane-373607.sqlr202301.lec9_2;
CREATE TABLE inlaid-lane-373607.sqlr202301.lec9_2(
    dt              string(255)
  , order_id        integer
  , user_id         string(255)
  , purchase_amount integer
);

INSERT INTO inlaid-lane-373607.sqlr202301.lec9_2
VALUES
    ('2014-01-01',  1, 'rhwpvvitou', 13900)
  , ('2014-01-01',  2, 'hqnwoamzic', 10616)
  , ('2014-01-02',  3, 'tzlmqryunr', 21156)
  , ('2014-01-02',  4, 'wkmqqwbyai', 14893)
  , ('2014-01-03',  5, 'ciecbedwbq', 13054)
  , ('2014-01-03',  6, 'svgnbqsagx', 24384)
  , ('2014-01-03',  7, 'dfgqftdocu', 15591)
  , ('2014-01-04',  8, 'sbgqlzkvyn',  3025)
  , ('2014-01-04',  9, 'lbedmngbol', 24215)
  , ('2014-01-04', 10, 'itlvssbsgx',  2059)
  , ('2014-01-05', 11, 'jqcmmguhik',  4235)
  , ('2014-01-05', 12, 'jgotcrfeyn', 28013)
  , ('2014-01-05', 13, 'pgeojzoshx', 16008)
  , ('2014-01-06', 14, 'msjberhxnx',  1980)
  , ('2014-01-06', 15, 'tlhbolohte', 23494)
  , ('2014-01-06', 16, 'gbchhkcotf',  3966)
  , ('2014-01-07', 17, 'zfmbpvpzvu', 28159)
  , ('2014-01-07', 18, 'yauwzpaxtx',  8715)
  , ('2014-01-07', 19, 'uyqboqfgex', 10805)
  , ('2014-01-08', 20, 'hiqdkrzcpq',  3462)
  , ('2014-01-08', 21, 'zosbvlylpv', 13999)
  , ('2014-01-08', 22, 'bwfbchzgnl',  2299)
  , ('2014-01-09', 23, 'zzgauelgrt', 16475)
  , ('2014-01-09', 24, 'qrzfcwecge',  6469)
  , ('2014-01-10', 25, 'njbpsrvvcq', 16584)
  , ('2014-01-10', 26, 'cyxfgumkst', 1133)
;

select dt, sum(purchase_amount) as total_amount
--  최근 최대 7일동안의 평균 계산하기
, avg(sum(purchase_amount)) over (order by dt rows between 6 preceding and current row) as seven_day_avg
-- 7일의 데이터가 모두 있는 경우에만 이동평균을 구하기
, case when 7 = count(*) over (order by dt rows between 6 preceding and current row)
then avg (sum(purchase_amount)) over(order by dt rows between 6 preceding and current row)
end as seven_day_avg_strict
from inlaid-lane-373607.sqlr202301.lec9_2
group by dt
order by dt;

--3) 일별 매출과 당원 누계 매출을 집계하기
select dt,substr(dt, 1, 7) as year_month,
sum(purchase_amount) as total_amount,
sum(sum(purchase_amount)) 
over(partition by substr(dt,1,7) order by dt rows unbounded preceding) as agg_amount
from inlaid-lane-373607.sqlr202301.lec9_2
group by dt
order by dt;


--4) 날짜별 매출을 일시 테이블로 만들기
with
daliy_purchase as (
  select dt
  , substr(dt, 1, 4) as year
  , substr(dt, 6, 2) as month
  , substr(dt, 9, 2) as date
  , sum(purchase_amount) as purchase_amount
  , count(order_id) as orders
  from inlaid-lane-373607.sqlr202301.lec9_2
  group by dt
)
select * from daliy_purchase
order by dt;

--5) daliy_purchase 테이블에 대한 당월 누계 매출을 집계하기
with
daliy_purchase as (
  select dt
  , substr(dt, 1, 4) as year
  , substr(dt, 6, 2) as month
  , substr(dt, 9, 2) as date
  , sum(purchase_amount) as purchase_amount
  , count(order_id) as orders
  from inlaid-lane-373607.sqlr202301.lec9_2
  group by dt
)
select dt
, concat(year, '-', month) as year_month
, purchase_amount
, sum(purchase_amount) over(partition by year, month order by dt rows unbounded preceding) as agg_amount
from daliy_purchase
order by dt;


--6) 월별 매출의 작대비 구하기
DROP TABLE IF EXISTS inlaid-lane-373607.sqlr202301.lec9_3;
CREATE TABLE inlaid-lane-373607.sqlr202301.lec9_3(
    dt              string(255)
  , order_id        integer
  , user_id         string(255)
  , purchase_amount integer
);

INSERT INTO inlaid-lane-373607.sqlr202301.lec9_3
VALUES
    ('2014-01-01',    1, 'rhwpvvitou', 13900)
  , ('2014-02-08',   95, 'chtanrqtzj', 28469)
  , ('2014-03-09',  168, 'bcqgtwxdgq', 18899)
  , ('2014-04-11',  250, 'kdjyplrxtk', 12394)
  , ('2014-05-11',  325, 'pgnjnnapsc',  2282)
  , ('2014-06-12',  400, 'iztgctnnlh', 10180)
  , ('2014-07-11',  475, 'eucjmxvjkj',  4027)
  , ('2014-08-10',  550, 'fqwvlvndef',  6243)
  , ('2014-09-10',  625, 'mhwhxfxrxq',  3832)
  , ('2014-10-11',  700, 'wyrgiyvaia',  6716)
  , ('2014-11-10',  775, 'cwpdvmhhwh', 16444)
  , ('2014-12-10',  850, 'eqeaqvixkf', 29199)
  , ('2015-01-09',  925, 'efmclayfnr', 22111)
  , ('2015-02-10', 1000, 'qnebafrkco', 11965)
  , ('2015-03-12', 1075, 'gsvqniykgx', 20215)
  , ('2015-04-12', 1150, 'ayzvjvnocm', 11792)
  , ('2015-05-13', 1225, 'knhevkibbp', 18087)
  , ('2015-06-10', 1291, 'wxhxmzqxuw', 18859)
  , ('2015-07-10', 1366, 'krrcpumtzb', 14919)
  , ('2015-08-08', 1441, 'lpglkecvsl', 12906)
  , ('2015-09-07', 1516, 'mgtlsfgfbj',  5696)
  , ('2015-10-07', 1591, 'trgjscaajt', 13398)
  , ('2015-11-06', 1666, 'ccfbjyeqrb',  6213)
  , ('2015-12-05', 1741, 'onooskbtzp', 26024)
;
--집계하기
with
daliy_purchase as (
  select dt
  , substr(dt, 1, 4) as year
  , substr(dt, 6, 2) as month
  , substr(dt, 9, 2) as date
  , sum(purchase_amount) as purchase_amount
  , count(order_id) as orders
  from inlaid-lane-373607.sqlr202301.lec9_3
  group by dt
)
select month
, sum(case year when '2014' then purchase_amount end) as amount_2014
, sum(case year when '2015' then purchase_amount end) as amount_2015
, 100.0 * sum(case year when '2015' then purchase_amount end) 
/ sum(case year when '2014' then purchase_amount end) as rate
from daliy_purchase
group by month
order by month;

--7) z차트로 업적의 추이 확인하기 
with
-- 월별매출 집계를 위해 일별 매출을 구하는 일시 테이블 만들기
daliy_purchase as (
  select dt
  , substr(dt, 1, 4) as year
  , substr(dt, 6, 2) as month
  , substr(dt, 9, 2) as date
  , sum(purchase_amount) as purchase_amount
  , count(order_id) as orders
  from inlaid-lane-373607.sqlr202301.lec9_3
  group by dt
)
-- 월별 매출을 집계하는 일시 테이블 만들기 (z차트 구성요소 1단계. 월차매출 집계)
, monthly_amount as (
  select year
  , month
  , sum(purchase_amount) as amount --월별 매출합계
  from daliy_purchase
  group by year, month
)
-- 올해의 매출누계를 집계하는 일시 테이블 만들기 (z차트 구성요소 2단계. 매출누계 집계)
, calc_index as (
  select
  year
  , month
  , amount
  , sum(case when year='2015' then amount end) over (order by year, month rows unbounded preceding) as agg_amount
  -- 당월부터 전년도 당월이후까지 (11개월간) 매출합계 구하기 (z차트 구성요소 3단계. 이동년계 집계)
  , sum(amount) -- 월별 매출합계의 합계를 구하기
  over(order by year, month rows between 11 preceding and current row) as year_avg_amount
  from monthly_amount
  order by year, month
)
--위 일시테이블(calc_index)을 활용하여, 전년도와의 비교를 위해 2015년도의 데이터만 추출하기
select concat(year, '-', month) as year_month
, amount
, agg_amount
, year_avg_amount
from calc_index
where year = '2015'
order by year_month;


--8) 매출과 관련된 지표를 집계하기
with
daliy_purchase as (
  select dt
  , substr(dt, 1, 4) as year
  , substr(dt, 6, 2) as month
  , substr(dt, 9, 2) as date
  , sum(purchase_amount) as purchase_amount
  , count(order_id) as orders
  from inlaid-lane-373607.sqlr202301.lec9_3
  group by dt
)
, monthly_purchase as
(select year,
month,
sum(orders) as orders,
avg(purchase_amount) as avg_amount,
sum(purchase_amount) as monthly
from daliy_purchase
group by year, month
)
select concat(year, '-', month) as year_month
, orders
, avg_amount
, monthly
, sum(monthly) over (partition by year order by month rows unbounded preceding) as agg_amount
, lag(monthly, 12) over(order by year, month) as last_year
, 100.0 * monthly / lag(monthly, 12) over(order by year, month) as rate --12행 전의 값과 현재 값을 나누면 작대비가 됨.
from monthly_purchase
order by year_month;
